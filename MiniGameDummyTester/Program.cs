using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace MiniGameClient
{
    class Program
    {
        private static readonly HttpClient client = new HttpClient();

        static async Task Main(string[] args)
        {
            client.BaseAddress = new Uri("http://127.0.0.1:5000/");

            // Test submit score
            await SubmitScoreAsync(new
            {
                userId = 1,
                submissionDate = DateTime.UtcNow,
                score = 200
            });

            // Test create account
            await CreateAccountAsync(new
            {
                UID = 1, // In real scenario this will be auto-generated by the server
                Username = "testuser",
                Nickname = "testnick",
                Password = Convert.ToBase64String(Encoding.UTF8.GetBytes("mypassword")), // base64 encoding
                RegistrationDate = DateTime.UtcNow
            });

            // Test login
            await LoginAsync(new
            {
                UID = 1,
                Username = "testuser",
                Password = Convert.ToBase64String(Encoding.UTF8.GetBytes("mypassword")), // base64 encoding
                LoginDate = DateTime.UtcNow
            });
        }

        private static async Task SubmitScoreAsync(object data)
        {
            var json = JsonConvert.SerializeObject(data);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await client.PostAsync("Scores/submit", content);
            response.EnsureSuccessStatusCode();

            var responseString = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Submit Score Response: {responseString}");
        }

        private static async Task CreateAccountAsync(object data)
        {
            var json = JsonConvert.SerializeObject(data);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await client.PostAsync("Scores/createAccount", content);
            response.EnsureSuccessStatusCode();

            var responseString = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Create Account Response: {responseString}");
        }

        private static async Task LoginAsync(object data)
        {
            var json = JsonConvert.SerializeObject(data);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await client.PostAsync("Scores/login", content);
            response.EnsureSuccessStatusCode();

            var responseString = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Login Response: {responseString}");
        }
    }
}